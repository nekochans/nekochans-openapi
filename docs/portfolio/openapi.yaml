openapi: 3.0.3
info:
  title: portfolio
  version: 1.0.0
  contact:
    name: nekochans
    url: 'https://github.com/nekochans/portfolio-backend/issues'
  termsOfService: 'https://github.com/nekochans/portfolio-backend'
  license:
    name: MIT
  description: 'https://nekochans.org のバックエンドで利用しているAPI'
servers:
  - url: 'http://localhost:8888'
paths:
  '/members/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: 001 メンバー参照
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
              examples:
                example-1:
                  value:
                    id: 1
                    githubUserName: keitakn
                    githubPicture: 'https://avatars3.githubusercontent.com/u/11032365'
                    cvUrl: 'https://github.com/keitakn/cv'
          headers:
            X-Request-Id:
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example-error-404:
                  value:
                    code: 404
                    message: Member Not Found
          headers:
            X-Request-Id:
              schema:
                type: string
        '422':
          description: Unprocessable Entity (WebDAV)
          headers:
            X-Request-Id:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                example-error-422:
                  value:
                    code: 422
                    message: Unprocessable Entity
                    validationErrors:
                      - key: id
                        reason: Invalid id format
      operationId: getMemberById
      description: Memberを1件取得する
      tags:
        - members
  /members:
    get:
      summary: 002 メンバー一覧参照
      responses:
        '200':
          description: OK
          headers:
            X-Request-Id:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Member'
              examples:
                example-1:
                  value:
                    items:
                      - id: 1
                        githubUserName: keitakn
                        githubPicture: 'https://avatars3.githubusercontent.com/u/11032365'
                        cvUrl: 'https://github.com/keitakn/cv'
                      - id: 2
                        githubUserName: kobayashi-m42
                        githubPicture: 'https://avatars0.githubusercontent.com/u/32682645?s=460&v=4'
                        cvUrl: 'https://github.com/kobayashi-m42/cv'
            application/xml:
              schema:
                type: object
                properties: {}
        '404':
          description: Not Found
          headers:
            X-Request-Id:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example-error-404:
                  value:
                    code: 404
                    message: Not Found
      operationId: getMembers
      description: メンバー一覧を取得する
      parameters: []
      tags:
        - members
  /webservices:
    get:
      summary: 003 Webサービス一覧参照
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/WebService'
              examples:
                example-1:
                  value:
                    items:
                      - id: 1
                        name: service name
                        serviceUrl: 'http://example.com'
                        ogpUrl: 'http://example.com/ogp.webp'
                        description: service description
            application/xml:
              schema:
                type: object
                properties: {}
            multipart/form-data:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/WebService'
          headers:
            X-Request-Id:
              schema:
                type: string
        '404':
          description: Not Found
          headers:
            X-Request-Id:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example-error-404:
                  value:
                    code: 404
                    message: Not Found
      operationId: getWebServices
      description: WebService一覧を取得する
components:
  schemas:
    Member:
      title: Member
      type: object
      x-examples:
        example-1:
          id: 1
          githubUserName: keitakn
          githubPicture: 'https://avatars3.githubusercontent.com/u/11032365'
          cvUrl: 'https://github.com/keitakn/cv'
      description: メンバーモデル
      properties:
        id:
          type: integer
          minimum: 1
          maximum: 18446744073709552000
          format: int64
        githubUserName:
          type: string
        githubPicture:
          type: string
          pattern: '^https?://[\w!\?/\+\-_~=;\.,\*&@#\$%\(\)''\[\]]+$'
          format: uri
        cvUrl:
          type: string
          pattern: '^https?://[\w!\?/\+\-_~=;\.,\*&@#\$%\(\)''\[\]]+$'
          format: uri
      required:
        - id
        - githubUserName
        - githubPicture
        - cvUrl
    Error:
      title: Error
      type: object
      description: エラーモデル
      x-examples:
        example-404:
          code: 404
          message: Member Not Found
        example-400:
          code: 400
          message: Bad Request
        example-500:
          code: 500
          message: Internal Server Error
        example-503:
          code: 503
          message: Service Temporarily Unavailable
      properties:
        code:
          type: integer
          example: 400
          enum:
            - 400
            - 404
            - 500
            - 503
        message:
          type: string
      required:
        - code
        - message
    WebService:
      title: WebService
      type: object
      x-examples:
        example-1:
          id: 1
          name: service name
          serviceUrl: 'http://example.com'
          ogpUrl: 'http://example.com/ogp.webp'
          description: service description
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          maximum: 18446744073709552000
        name:
          type: string
        serviceUrl:
          type: string
        ogpUrl:
          type: string
        description:
          type: string
      required:
        - id
        - name
        - serviceUrl
        - ogpUrl
        - description
    ValidationError:
      title: ValidationError
      type: object
      x-examples:
        example-1:
          code: 422
          message: Unprocessable Entity
          validationErrors:
            - key: email
              reason: invalid email format
      properties:
        code:
          type: integer
          example: 422
        message:
          type: string
          example: Unprocessable Entity
        validationErrors:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              reason:
                type: string
