openapi: 3.0.0
info:
  title: portfolio
  version: '1.0'
  contact:
    name: nekochans
    url: 'https://github.com/nekochans/portfolio-backend/issues'
  termsOfService: 'https://github.com/nekochans/portfolio-backend'
  license:
    name: MIT
  description: 'https://nekochans.org のバックエンドで利用しているAPI'
servers:
  - url: 'http://localhost:8888'
paths:
  '/members/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: 001 メンバー参照
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
              examples:
                example-1:
                  value:
                    id: 1
                    githubUserName: keitakn
                    githubPicture: 'https://avatars3.githubusercontent.com/u/11032365'
                    cvUrl: 'https://github.com/keitakn/cv'
          headers:
            X-Request-Id:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              schema:
                type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                example-1:
                  value:
                    code: 404
                    message: Member Not Found
          headers:
            X-Request-Id:
              schema:
                type: string
        '500':
          description: Internal Server Error
          headers:
            X-Request-Id:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      operationId: getMemberById
      description: Memberを1件取得する
      tags:
        - members
  /members:
    get:
      summary: 002 メンバー一覧参照
      responses:
        '200':
          description: OK
          headers:
            X-Request-Id:
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Member'
              examples:
                example-1:
                  value:
                    items:
                      - id: 1
                        githubUserName: keitakn
                        githubPicture: 'https://avatars3.githubusercontent.com/u/11032365'
                        cvUrl: 'https://github.com/keitakn/cv'
                      - id: 2
                        githubUserName: kobayashi-m42
                        githubPicture: 'https://avatars0.githubusercontent.com/u/32682645?s=460&v=4'
                        cvUrl: 'https://github.com/kobayashi-m42/cv'
            application/xml:
              schema:
                type: object
                properties: {}
      operationId: getMembers
      description: メンバー一覧を取得する
      parameters: []
      tags:
        - members
components:
  schemas:
    Member:
      title: Member
      type: object
      x-examples:
        example-1:
          id: 1
          githubUserName: keitakn
          githubPicture: 'https://avatars3.githubusercontent.com/u/11032365'
          cvUrl: 'https://github.com/keitakn/cv'
      description: メンバーモデル
      properties:
        id:
          type: integer
          minimum: 1
          maximum: 18446744073709552000
          format: int64
        githubUserName:
          type: string
        githubPicture:
          type: string
          pattern: "^https?://[\\w!\\?/\\+\\-_~=;\\.,\\*&@#\\$%\\(\\)'\\[\\]]+$"
        cvUrl:
          type: string
          pattern: "^https?://[\\w!\\?/\\+\\-_~=;\\.,\\*&@#\\$%\\(\\)'\\[\\]]+$"
    Error:
      title: Error
      type: object
      description: エラーモデル
      x-examples:
        example-1:
          code: 404
          message: Member Not Found
      properties:
        code:
          type: integer
          example: 0
          enum:
            - 400
            - 404
            - 500
            - 503
        message:
          type: string
